name: Build Android APK

# Manual trigger - tÃº decides cuÃ¡ndo ejecutar
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version name for APK'
        required: false
        default: 'v1.0'

jobs:
  build:
    name: Build APK
    runs-on: ubuntu-latest
    
    steps:
    # 1. Checkout del cÃ³digo
    - name: Checkout repository
      uses: actions/checkout@v4
    
    # 2. Setup Node.js
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    # 3. Setup Java (necesario para Android)
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
    
    # 4. Setup Android SDK
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
    
    # 5. Instalar dependencias
    - name: Install dependencies
      run: |
        npm ci
        npm install -g @expo/cli eas-cli
    
    # Fix expo-router issue
    - name: Remove expo-router dependency
      run: |
        npm uninstall expo-router @expo/metro-runtime
        rm -rf app/ || true
    
    # 6. Prebuild para Android
    - name: Expo prebuild
      run: npx expo prebuild --platform android --clear
    
    # 7. Build APK
    - name: Build APK
      run: |
        cd android
        chmod +x ./gradlew
        ./gradlew assembleRelease
    
    # 8. Subir APK como artifact
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: qr-pdf-generator-${{ github.event.inputs.version || 'v1.0' }}.apk
        path: android/app/build/outputs/apk/release/app-release.apk
        retention-days: 30

  # Job adicional para notificar Ã©xito
  notify:
    needs: build
    runs-on: ubuntu-latest
    if: success()
    steps:
    - name: Build Success
      run: |
        echo "âœ… APK construido exitosamente!"
        echo "ðŸ“± Descarga desde la secciÃ³n 'Artifacts'"
        echo "ðŸš€ Tu app QR PDF Generator estÃ¡ lista!"